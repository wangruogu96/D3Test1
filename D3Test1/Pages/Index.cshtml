@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script src="https://d3js.org/d3.v5.min.js"></script>

<div class="pie"></div>

<script>
    //define data and color
    var data = [
        { "name": "apple", "value": 65 },
        { "name": "peach", "value": 34 },
        { "name": "orange", "value": 13 },
        { "name": "grape", "value": 25 }
    ];

    var width = 300,
        height = 300,
        radius = Math.min(width, height) / 2;

    var color = d3.scaleSequential()
        .domain([0, 100])
        .interpolator(d3.interpolateRainbow);

    //set up arcs and pie
    var arcs = d3.pie()
        .value(function (d) { return d.value; })(data);

    var arc = d3.arc()
        .outerRadius(radius - 10)
        .innerRadius(0);

    var labelArc = d3.arc()
        .outerRadius(radius - 80)
        .innerRadius(radius - 80);

    //draw the shape
    var svg = d3.select(".pie")
        .append("svg")
          .attr("width", width)
          .attr("height", height)
        .append("g")
          .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

    var g = svg.selectAll("arc")
        .data(arcs)
        .enter().append("g")
        .attr("class", "arc");

    g.append("path")
        .attr("d", arc)
        .style("fill", function (d) { return color(d.data.value); });

    //labels
    g.append("text")
        .attr("transform", function (d) { return "translate(" + labelArc.centroid(d) + ")"; })
        .text(function (d) { return d.data.name; })
        .style("fill", "black");

    function generateData(){
            var testdata = stream_layers(7,10+Math.random()*100,.1).map(function(data, i) {
                return {
                    key: 'Stream' + i,
                    values: data.map(function(a){a.y = a.y * (i <= 1 ? -1 : 1); return a})
                };
            });

            testdata[0].type = "area"
            testdata[0].yAxis = 1
            testdata[1].type = "area"
            testdata[1].yAxis = 1
            testdata[2].type = "line"
            testdata[2].yAxis = 1
            testdata[3].type = "line"
            testdata[3].yAxis = 2
            testdata[4].type = "bar"
            testdata[4].yAxis = 2
            testdata[5].type = "bar"
            testdata[5].yAxis = 2
            testdata[6].type = "bar"
            testdata[6].yAxis = 2

            return testdata;
    };

    function stream_layers(n, m, o) {
        if (arguments.length < 3) o = 0;
            function bump(a) {
                var x = 1 / (.1 + Math.random()),
                    y = 2 * Math.random() - .5,
                    z = 10 / (.1 + Math.random());
                for (var i = 0; i < m; i++) {
                    var w = (i / m - y) * z;
                    a[i] += x * Math.exp(-w * w);
                }
            }
            return d3.range(n).map(function() {
                var a = [], i;
                for (i = 0; i < m; i++) a[i] = o + o * Math.random();
                for (i = 0; i < 5; i++) bump(a);
                return a.map(stream_index);
            });
    };

    function stream_index(d, i) {
            return {x: i, y: Math.max(0, d)};
    };

    var chartData = generateData();

    console.log(chartData);

</script>